/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.13.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.IoK8sApiCertificatesV1beta1CertificateSigningRequest;
import io.swagger.client.model.IoK8sApiCertificatesV1beta1CertificateSigningRequestList;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1Patch;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1Status;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CertificatesV1beta1Api
 */
@Ignore
public class CertificatesV1beta1ApiTest {

    private final CertificatesV1beta1Api api = new CertificatesV1beta1Api();

    
    /**
     * 
     *
     * create a CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        IoK8sApiCertificatesV1beta1CertificateSigningRequest body = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.createCertificatesV1beta1CertificateSigningRequest(body, includeUninitialized, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteCertificatesV1beta1CertificateSigningRequest(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCertificatesV1beta1CollectionCertificateSigningRequestTest() throws ApiException {
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteCertificatesV1beta1CollectionCertificateSigningRequest(includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCertificatesV1beta1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getCertificatesV1beta1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequestList response = api.listCertificatesV1beta1CertificateSigningRequest(includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.patchCertificatesV1beta1CertificateSigningRequest(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchCertificatesV1beta1CertificateSigningRequestStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.patchCertificatesV1beta1CertificateSigningRequestStatus(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.readCertificatesV1beta1CertificateSigningRequest(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readCertificatesV1beta1CertificateSigningRequestStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.readCertificatesV1beta1CertificateSigningRequestStatus(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        String name = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.replaceCertificatesV1beta1CertificateSigningRequest(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace approval of the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceCertificatesV1beta1CertificateSigningRequestApprovalTest() throws ApiException {
        String name = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest body = null;
        String dryRun = null;
        String pretty = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.replaceCertificatesV1beta1CertificateSigningRequestApproval(name, body, dryRun, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified CertificateSigningRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceCertificatesV1beta1CertificateSigningRequestStatusTest() throws ApiException {
        String name = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiCertificatesV1beta1CertificateSigningRequest response = api.replaceCertificatesV1beta1CertificateSigningRequestStatus(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind CertificateSigningRequest. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchCertificatesV1beta1CertificateSigningRequestTest() throws ApiException {
        String name = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchCertificatesV1beta1CertificateSigningRequest(name, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of CertificateSigningRequest. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchCertificatesV1beta1CertificateSigningRequestListTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchCertificatesV1beta1CertificateSigningRequestList(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
