/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.13.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.IoK8sApiRbacV1beta1ClusterRole;
import io.swagger.client.model.IoK8sApiRbacV1beta1ClusterRoleBinding;
import io.swagger.client.model.IoK8sApiRbacV1beta1ClusterRoleBindingList;
import io.swagger.client.model.IoK8sApiRbacV1beta1ClusterRoleList;
import io.swagger.client.model.IoK8sApiRbacV1beta1Role;
import io.swagger.client.model.IoK8sApiRbacV1beta1RoleBinding;
import io.swagger.client.model.IoK8sApiRbacV1beta1RoleBindingList;
import io.swagger.client.model.IoK8sApiRbacV1beta1RoleList;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1Patch;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1Status;
import io.swagger.client.model.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RbacAuthorizationV1beta1Api
 */
@Ignore
public class RbacAuthorizationV1beta1ApiTest {

    private final RbacAuthorizationV1beta1Api api = new RbacAuthorizationV1beta1Api();

    
    /**
     * 
     *
     * create a ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        IoK8sApiRbacV1beta1ClusterRole body = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1ClusterRole response = api.createRbacAuthorizationV1beta1ClusterRole(body, includeUninitialized, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        IoK8sApiRbacV1beta1ClusterRoleBinding body = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1ClusterRoleBinding response = api.createRbacAuthorizationV1beta1ClusterRoleBinding(body, includeUninitialized, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String namespace = null;
        IoK8sApiRbacV1beta1Role body = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1Role response = api.createRbacAuthorizationV1beta1NamespacedRole(namespace, body, includeUninitialized, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String namespace = null;
        IoK8sApiRbacV1beta1RoleBinding body = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1RoleBinding response = api.createRbacAuthorizationV1beta1NamespacedRoleBinding(namespace, body, includeUninitialized, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1ClusterRole(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1ClusterRoleBinding(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1CollectionClusterRoleTest() throws ApiException {
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1CollectionClusterRole(includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1CollectionClusterRoleBindingTest() throws ApiException {
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1CollectionClusterRoleBinding(includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1CollectionNamespacedRoleTest() throws ApiException {
        String namespace = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1CollectionNamespacedRole(namespace, includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1CollectionNamespacedRoleBindingTest() throws ApiException {
        String namespace = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1CollectionNamespacedRoleBinding(namespace, includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1NamespacedRole(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteRbacAuthorizationV1beta1NamespacedRoleBinding(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRbacAuthorizationV1beta1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getRbacAuthorizationV1beta1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiRbacV1beta1ClusterRoleList response = api.listRbacAuthorizationV1beta1ClusterRole(includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiRbacV1beta1ClusterRoleBindingList response = api.listRbacAuthorizationV1beta1ClusterRoleBinding(includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String namespace = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiRbacV1beta1RoleList response = api.listRbacAuthorizationV1beta1NamespacedRole(namespace, includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String namespace = null;
        Boolean includeUninitialized = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiRbacV1beta1RoleBindingList response = api.listRbacAuthorizationV1beta1NamespacedRoleBinding(namespace, includeUninitialized, pretty, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRbacAuthorizationV1beta1RoleBindingForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiRbacV1beta1RoleBindingList response = api.listRbacAuthorizationV1beta1RoleBindingForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRbacAuthorizationV1beta1RoleForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApiRbacV1beta1RoleList response = api.listRbacAuthorizationV1beta1RoleForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1ClusterRole response = api.patchRbacAuthorizationV1beta1ClusterRole(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1ClusterRoleBinding response = api.patchRbacAuthorizationV1beta1ClusterRoleBinding(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1Role response = api.patchRbacAuthorizationV1beta1NamespacedRole(name, namespace, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1RoleBinding response = api.patchRbacAuthorizationV1beta1NamespacedRoleBinding(name, namespace, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApiRbacV1beta1ClusterRole response = api.readRbacAuthorizationV1beta1ClusterRole(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApiRbacV1beta1ClusterRoleBinding response = api.readRbacAuthorizationV1beta1ClusterRoleBinding(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApiRbacV1beta1Role response = api.readRbacAuthorizationV1beta1NamespacedRole(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApiRbacV1beta1RoleBinding response = api.readRbacAuthorizationV1beta1NamespacedRoleBinding(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        String name = null;
        IoK8sApiRbacV1beta1ClusterRole body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1ClusterRole response = api.replaceRbacAuthorizationV1beta1ClusterRole(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        IoK8sApiRbacV1beta1ClusterRoleBinding body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1ClusterRoleBinding response = api.replaceRbacAuthorizationV1beta1ClusterRoleBinding(name, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApiRbacV1beta1Role body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1Role response = api.replaceRbacAuthorizationV1beta1NamespacedRole(name, namespace, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApiRbacV1beta1RoleBinding body = null;
        String pretty = null;
        String dryRun = null;
        IoK8sApiRbacV1beta1RoleBinding response = api.replaceRbacAuthorizationV1beta1NamespacedRoleBinding(name, namespace, body, pretty, dryRun);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterRole. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1ClusterRoleTest() throws ApiException {
        String name = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1ClusterRole(name, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterRoleBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1ClusterRoleBinding(name, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterRoleBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1ClusterRoleBindingListTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1ClusterRoleBindingList(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterRole. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1ClusterRoleListTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1ClusterRoleList(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind Role. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1NamespacedRole(name, namespace, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind RoleBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1NamespacedRoleBinding(name, namespace, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of RoleBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1NamespacedRoleBindingListTest() throws ApiException {
        String namespace = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1NamespacedRoleBindingList(namespace, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Role. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1NamespacedRoleListTest() throws ApiException {
        String namespace = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1NamespacedRoleList(namespace, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of RoleBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1RoleBindingListForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1RoleBindingListForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Role. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchRbacAuthorizationV1beta1RoleListForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchRbacAuthorizationV1beta1RoleListForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
